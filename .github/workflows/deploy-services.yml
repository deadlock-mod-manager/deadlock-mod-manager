name: Deploy Services
env:
  NODE_VERSION: "24.8.0"

on:
  workflow_dispatch:
    inputs:
      force-deploy:
        description: "Force deploy all services (ignore path filtering)"
        required: false
        default: false
        type: boolean
  push:
    branches:
      - main
    paths:
      - "apps/**"
      - "packages/**"

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      bot: ${{ steps.filter.outputs.bot }}
      lockdex: ${{ steps.filter.outputs.lockdex }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api:
              - 'apps/api/**'
              - 'packages/**'
            bot:
              - 'apps/bot/**'
              - 'packages/**'
            lockdex:
              - 'apps/lockdex/**'
              - 'packages/**'

  deploy-api:
    environment:
      name: production
      url: https://api.deadlockmods.app
    name: Deploy API
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' || github.event.inputs.force-deploy == 'true' }}
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and push Docker image
        id: docker-build
        uses: ./.github/actions/docker-build-push
        with:
          service-name: api
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}
          node-version: ${{ env.NODE_VERSION }}

      - name: Restart Kubernetes deployment
        uses: ./.github/actions/k8s-restart-deployment
        with:
          service-name: api
          deployment-name: deadlock-mod-manager-web
          kubeconfig: ${{ secrets.KUBECONFIG }}
          namespace: ${{ secrets.K8S_NAMESPACE || 'default' }}

  deploy-bot:
    environment:
      name: production
    name: Deploy Bot
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.bot == 'true' || github.event.inputs.force-deploy == 'true' }}
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and push Docker image
        id: docker-build
        uses: ./.github/actions/docker-build-push
        with:
          service-name: bot
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}
          node-version: ${{ env.NODE_VERSION }}

      - name: Restart Kubernetes deployment
        uses: ./.github/actions/k8s-restart-deployment
        with:
          service-name: bot
          deployment-name: deadlock-mod-manager-bot
          kubeconfig: ${{ secrets.KUBECONFIG }}
          namespace: ${{ secrets.K8S_NAMESPACE || 'default' }}

  deploy-lockdex:
    environment:
      name: production
    name: Deploy Lockdex
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.lockdex == 'true' || github.event.inputs.force-deploy == 'true' }}
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and push Docker image
        id: docker-build
        uses: ./.github/actions/docker-build-push
        with:
          service-name: lockdex
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}
          node-version: ${{ env.NODE_VERSION }}

      - name: Restart Kubernetes deployment
        uses: ./.github/actions/k8s-restart-deployment
        with:
          service-name: lockdex
          deployment-name: deadlock-mod-manager-lockdex
          kubeconfig: ${{ secrets.KUBECONFIG }}
          namespace: ${{ secrets.K8S_NAMESPACE || 'default' }}

